#!/usr/bin/env bash
#
# Bash script for provisioning the AEM author instances

set -e
set -x

function host_config(){
	export CLIENT_IP_ADDR=`ifconfig  | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}' | tail -1`
	export CLIENT_FQDN=`hostname`
	export CLIENT_NAME=`hostname | cut -d. -f 1 | tr '[:upper:]' '[:lower:]'`
	echo "Configuring /etc/hosts ..."
	echo "127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4" > /etc/hosts
	echo "::1       localhost localhost.localdomain localhost6 localhost6.localdomain6" >> /etc/hosts
	echo "$CLIENT_IP_ADDR    $CLIENT_FQDN $CLIENT_NAME" >> /etc/hosts
}

function update_repo(){
    echo "Update Repositories"
    sudo apt-get update -y
}

# Create mongod user and install home directory
function mongod_user_config(){
    if [ `id -u mongod 2>/dev/null || echo -1` -ge 0 ]; then 
        echo "mongod user exists , skip adding"
    else
        adduser mongod
        ssh-keygen -b 1024 -f mongod -t dsa
        sudo mkdir -p /home/mongod/.ssh
        cat aem.pub | sudo tee -a /home/mongod/.ssh/authorized_keys
        sudo chmod 600 /home/mongod/.ssh/authorized_keys
        sudo chmod 700 /home/mongod/.ssh
        sudo chown -R mongod /home/mongod
    fi
   


}

function install_mongod(){
	echo "Install MongoDB Enterprise 3.2.11"
	sudo apt-get install -y --force-yes mongodb-enterprise=3.2.11 mongodb-enterprise-server=3.2.11 mongodb-enterprise-shell=3.2.11
	sudo killall mongod    
    export CLIENT_IP_ADDR=`ifconfig  | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}' | tail -1`
	echo "Creating mongodb 'data' and 'logs' folders"
    for i in {1..3}
    do
        if [ ! -d "/apps/mongodb/node$i/data/db" ]; then
            mkdir -p /apps/mongodb/node"$i"/data/db
        fi
        if [ ! -d "/apps/mongodb/node$i/logs" ]; then
            mkdir -p /apps/mongodb/node"$i"/data/logs
        fi
        if [ ! -d "/apps/mongodb/node$i/conf" ]; then
            mkdir -p /apps/mongodb/node"$i"/conf
        fi	
        if [ ! -f "/apps/mongodb/node$i/conf/mongod.conf" ]; then   
	        echo "Copying the mongod.conf from share"
	        cp /share/mongo-configs/mongod.conf /apps/mongodb/node"$i"/conf
            sed -i -e "s%path: /apps/mongodb/data%path: /apps/mongodb/node$i/data%g" /apps/mongodb/node"$i"/conf/mongod.conf
            sed -i -e "s%dbPath: /apps/mongodb/data/db%dbPath: /apps/mongodb/node$i/data/db%g" /apps/mongodb/node"$i"/conf/mongod.conf
            sed -i -e "s%pidFilePath: /apps/mongodb/mongod.pid%pidFilePath: /apps/mongodb/node$i/mongod.pid%g" /apps/mongodb/node"$i"/conf/mongod.conf
            sed -i -e "s%port: 27017%port: `expr 27016 + $i`%g" /apps/mongodb/node"$i"/conf/mongod.conf
    	    sed -i -e "s/127.0.0.1/127.0.0.1,$CLIENT_IP_ADDR/g" /apps/mongodb/node"$i"/conf/mongod.conf
    	    echo "mongod.conf for node $i has been modified" | cat /apps/mongodb/node"$i"/conf/mongod.conf | grep 'port'
        fi

    done
    chown -R mongod:mongod /apps/mongodb
}

function add_mongo32_repo(){
	echo "Install MongoDB Enterprise 3.2 Repository"
	echo "deb http://repo.mongodb.com/apt/ubuntu "$(lsb_release -sc)"/mongodb-enterprise/3.2 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-enterprise.list
	sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927
	echo "Update Repositories"
	sudo apt-get update -y
	echo "Installing MongoDB Enterprise Dependencies"
	sudo apt-get install -y libgssapi-krb5-2 libsasl2-2 libssl1.0.0 libstdc++6 snmp

}

function mongod_config(){
	echo "Disable THP - http://docs.mongodb.org/master/tutorial/transparent-huge-pages/"
	echo "
	#!/bin/sh
	### BEGIN INIT INFO
	# Provides:          disable-transparent-hugepages
	# Required-Start:    $local_fs
	# Required-Stop:
	# X-Start-Before:    mongod mongodb-mms-automation-agent
	# Default-Start:     2 3 4 5
	# Default-Stop:      0 1 6
	# Short-Description: Disable Linux transparent huge pages
	# Description:       Disable Linux transparent huge pages, to improve
	#                    database performance.
	### END INIT INFO

	case $1 in
	  start)
	    if [ -d /sys/kernel/mm/transparent_hugepage ]; then
	      thp_path=/sys/kernel/mm/transparent_hugepage
	    elif [ -d /sys/kernel/mm/redhat_transparent_hugepage ]; then
	      thp_path=/sys/kernel/mm/redhat_transparent_hugepage
	    else
	      return 0
	    fi

	    echo 'never' > ${thp_path}/enabled
	    echo 'never' > ${thp_path}/defrag

	    unset thp_path
	    ;;
	esac
	" > /etc/init.d/disable-transparent-hugepages
	sudo chmod 755 /etc/init.d/disable-transparent-hugepages
	sudo update-rc.d disable-transparent-hugepages defaults
	echo "Set LC_ALL=C to .profile"
	sudo echo "export LC_ALL=C" >> /home/mongod/.profile
}

function install_java(){
    echo "Install Java"
    sudo add-apt-repository -y ppa:webupd8team/java
    sudo apt-get update
    sudo apt-get -y upgrade
    echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections 
    echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections
    sudo apt-get -y install oracle-java8-installer
}

# Copy AEM Install Jar and Unpack. Copy Configs and Scripts
function install_aem(){
    
    export AEM_INSTALLABLE_JAR=cq-quickstart-6.3.0.jar
    echo "Creat AEM Install root directories"
    sudo apt-get install -y oracle-java8-set-default
    export CLIENT_IP_ADDR=`ifconfig  | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}' | tail -1`
	for n in {1..2}
    do
         
         export AEM_ROOT="/apps/aem/author/node$n"
         if [ ! -d "$AEM_ROOT" ]; then
             mkdir -p "$AEM_ROOT"
             mkdir -p "$AEM_ROOT"/java_tmp
             chmod 777 "$AEM_ROOT"/java_tmp
             
         fi
         if [ ! -f $AEM_ROOT/$AEM_INSTALLABLE_JAR ]; then
             echo "Copying AEM Installable Jar file from share"
             cp /share/aem-software/$AEM_INSTALLABLE_JAR $AEM_ROOT/.
         fi
         cp /share/aem-software/license.properties $AEM_ROOT/.
         if [ ! -d "$AEM_ROOT/crx-quickstart" ]; then
             echo "Unpacking AEM Jar File"
             cd $AEM_ROOT 
             java -jar $AEM_ROOT/$AEM_INSTALLABLE_JAR -unpack
             echo "Unpack Complete"
             echo "Copy DocumentNodeStoreService.config from /share"
             mkdir -p $AEM_ROOT/crx-quickstart/install
             cp /share/aem-mongo-configs/63/org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreService.config $AEM_ROOT/crx-quickstart/install
             cp /share/aem-mongo-configs/63/org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStore.config $AEM_ROOT/crx-quickstart/install
             echo "Copying aem startup script"
             cp /share/aem-mongo-configs/63/start $AEM_ROOT/crx-quickstart/bin
             sed -i -e "s%/apps/aem/java_tmp%$AEM_ROOT/java_tmp%g" $AEM_ROOT/crx-quickstart/bin/start
             sed -i -e "s/192.168.23.100:27017,192.168.23.101:27017,192.168.23.102:27017/$CLIENT_IP_ADDR:27017,$CLIENT_IP_ADDR:27018,$CLIENT_IP_ADDR:27019/g" $AEM_ROOT/crx-quickstart/install/org.apache.jackrabbit.oak.plugins.document.DocumentNodeStoreService.config
         fi
         if [ "$n" -eq 2 ]; then
             echo "Changing AEM Port"
             sed -i -e "s/4502/5502/g" $AEM_ROOT/crx-quickstart/bin/start
         fi
         
         if [ ! -d "$AEM_ROOT/crx-quickstart/repository/datastore" ]; then
             echo "Create the shared Datastore links"
             mkdir -p $AEM_ROOT/crx-quickstart/repository 
           if [ ! -L "$AEM_ROOT/crx-quickstart/repository/datastore" ]; then
            ln -s /share/aem63-cluster-fds $AEM_ROOT/crx-quickstart/repository/datastore 
           fi
         fi
    done
   # echo "Set Folder Permissions for vagrant user"
   # sudo chown -R vagrant:vagrant /apps/aem
    echo "Copy AEM Init Scripts ,to start and stop aem"
    mkdir -p /etc/sysconfig
    cp /share/aem-scripts/aem-config /etc/sysconfig
    cp /share/aem-scripts/aem-init.sh /usr/local/bin
    chmod +x /usr/local/bin/aem-init.sh
}

host_config
#update_repo
mongod_user_config
add_mongo32_repo
install_mongod
mongod_config
install_java
install_aem

echo "Completed provisioning Mongo 3.2.11 PSS and two AEM Nodes"